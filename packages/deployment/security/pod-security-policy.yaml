apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: lightning-db-psp
  labels:
    app.kubernetes.io/name: lightning-db
    app.kubernetes.io/component: security-policy
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAsNonRoot'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 1000
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1000
        max: 65535
  readOnlyRootFilesystem: true
  seLinux:
    rule: 'RunAsAny'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: lightning-db-psp-user
  labels:
    app.kubernetes.io/name: lightning-db
    app.kubernetes.io/component: security-policy
rules:
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  verbs: ['use']
  resourceNames:
  - lightning-db-psp
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: lightning-db-psp-binding
  labels:
    app.kubernetes.io/name: lightning-db
    app.kubernetes.io/component: security-policy
roleRef:
  kind: ClusterRole
  name: lightning-db-psp-user
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: lightning-db
  namespace: lightning-db