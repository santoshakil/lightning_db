apiVersion: v1
kind: Secret
metadata:
  name: lightning-db-tls
  namespace: lightning-db
  labels:
    app.kubernetes.io/name: lightning-db
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # Base64 encoded TLS certificate and key
  # Generate with: openssl req -x509 -newkey rsa:4096 -keyout tls.key -out tls.crt -days 365 -nodes
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCi4uLgotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: v1
kind: Secret
metadata:
  name: lightning-db-auth
  namespace: lightning-db
  labels:
    app.kubernetes.io/name: lightning-db
    app.kubernetes.io/component: auth
type: Opaque
data:
  # Base64 encoded credentials
  admin-username: YWRtaW4=  # admin
  admin-password: cGFzc3dvcmQxMjM=  # password123
  metrics-username: bWV0cmljcw==  # metrics
  metrics-password: bWV0cmljc3Bhc3M=  # metricspass
---
apiVersion: v1
kind: Secret
metadata:
  name: lightning-db-encryption
  namespace: lightning-db
  labels:
    app.kubernetes.io/name: lightning-db
    app.kubernetes.io/component: encryption
type: Opaque
data:
  # Base64 encoded encryption keys
  # Generate with: openssl rand -base64 32
  master-key: $(openssl rand -base64 32 | base64 -w 0)
  backup-key: $(openssl rand -base64 32 | base64 -w 0)