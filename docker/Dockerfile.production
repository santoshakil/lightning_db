# Lightning DB Production Docker Container
# Optimized for production deployment with monitoring and observability

FROM rust:1.75-slim as builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy source code
COPY . .

# Build optimized release binary
RUN cargo build --release --bin lightning-cli --bin lightning-admin-server

# Production runtime image
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user for security
RUN groupadd -r lightning && useradd -r -g lightning lightning

# Create data directories
RUN mkdir -p /data/db /data/backups /data/logs /data/config \
    && chown -R lightning:lightning /data

# Copy binaries from builder
COPY --from=builder /app/target/release/lightning-cli /usr/local/bin/
COPY --from=builder /app/target/release/lightning-admin-server /usr/local/bin/

# Copy configuration templates
COPY docker/config/ /etc/lightning-db/

# Copy startup scripts
COPY docker/scripts/ /usr/local/bin/
RUN chmod +x /usr/local/bin/*.sh

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Switch to non-root user
USER lightning

# Set working directory
WORKDIR /data

# Expose ports
EXPOSE 8080

# Default environment variables
ENV LIGHTNING_DB_PATH=/data/db \
    LIGHTNING_DB_CACHE_SIZE=256MB \
    LIGHTNING_DB_PORT=8080 \
    LIGHTNING_DB_LOG_LEVEL=info \
    LIGHTNING_DB_BACKUP_DIR=/data/backups \
    LIGHTNING_DB_CONFIG_FILE=/etc/lightning-db/production.toml

# Default command
CMD ["/usr/local/bin/start-lightning-db.sh"]